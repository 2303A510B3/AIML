{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOHPnWDgLVorDVzRMAg4+ew",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/2303A510B3/AIML/blob/main/Assignment%201%20part%20-1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XPZ7RSppb5QQ",
        "outputId": "1b5272ab-1fb3-4b88-fdde-c43d67d085f8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'nbformat': 4,\n",
              " 'nbformat_minor': 0,\n",
              " 'metadata': {'colab': {'provenance': [],\n",
              "   'authorship_tag': 'ABX9TyNLcbABWywRP5Xnq0DL5bfi'},\n",
              "  'kernelspec': {'name': 'python3', 'display_name': 'Python 3'},\n",
              "  'language_info': {'name': 'python'}},\n",
              " 'cells': [{'cell_type': 'markdown',\n",
              "   'metadata': {'id': 'view-in-github', 'colab_type': 'text'},\n",
              "   'source': ['<a href=\"https://colab.research.google.com/github/2303A510B3/2303A510B3/blob/main/Assignment-1%20part%20-1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>']},\n",
              "  {'cell_type': 'code',\n",
              "   'metadata': {'colab': {'base_uri': 'https://localhost:8080/'},\n",
              "    'id': 'BpsdRlcGPEdz',\n",
              "    'outputId': '9866d8b7-88b5-4bfb-c8cf-33209fe817a3'},\n",
              "   'outputs': [{'output_type': 'stream',\n",
              "     'name': 'stdout',\n",
              "     'text': ['1.1\\n',\n",
              "      '[[1]\\n',\n",
              "      ' [2]\\n',\n",
              "      ' [3]\\n',\n",
              "      ' [4]\\n',\n",
              "      ' [5]]\\n',\n",
              "      '1.2\\n',\n",
              "      '[1 2 3 4 5]\\n',\n",
              "      \"<class 'numpy.ndarray'>\\n\",\n",
              "      '[ 4 10 18]\\n',\n",
              "      '[0.25 0.4  0.5 ]\\n',\n",
              "      '[  1  32 729]\\n',\n",
              "      '[5 7 9]\\n',\n",
              "      '[0.84147098 0.90929743 0.14112001]\\n',\n",
              "      '[0.         0.69314718 1.09861229]\\n',\n",
              "      '[ 2.71828183  7.3890561  20.08553692]\\n',\n",
              "      '[0.        1.        1.5849625]\\n']}],\n",
              "   'source': ['#implementing lists using Numpy\\n',\n",
              "    'import numpy as np\\n',\n",
              "    'print(1.1)\\n',\n",
              "    'list=np.array([[1],[2],[3],[4],[5]])\\n',\n",
              "    'print(list)\\n',\n",
              "    '\\n',\n",
              "    '#implementing arrays using Numpy\\n',\n",
              "    'import numpy as np\\n',\n",
              "    'print(1.2)\\n',\n",
              "    'array=np.array([1,2,3,4,5])\\n',\n",
              "    'print(array)\\n',\n",
              "    '\\n',\n",
              "    '#Indentifing type using \"type\"()method\\n',\n",
              "    'import numpy as np\\n',\n",
              "    'arr =np.array([1,2,3,4,5,6,7])\\n',\n",
              "    'print(type(arr))\\n',\n",
              "    '\\n',\n",
              "    '#performing mathematical operations\\n',\n",
              "    '#1.multipilcation\\n',\n",
              "    'import numpy as np\\n',\n",
              "    'a=np.array([1,2,3])\\n',\n",
              "    'b=np.array([4,5,6])\\n',\n",
              "    'mul=np.multiply(a,b)\\n',\n",
              "    'print(mul)\\n',\n",
              "    '#2.division\\n',\n",
              "    'div=np.divide(a,b)\\n',\n",
              "    'print(div)\\n',\n",
              "    '#3,poweroff\\n',\n",
              "    'power=np.power(a,b)\\n',\n",
              "    'print(power)\\n',\n",
              "    '\\n',\n",
              "    '#Addition of two array\\n',\n",
              "    'import numpy as np\\n',\n",
              "    'array1=np.array([1,2,3])\\n',\n",
              "    'array2=np.array([4,5,6])\\n',\n",
              "    'r=array1+array2\\n',\n",
              "    'print(r)\\n',\n",
              "    '\\n',\n",
              "    '#implement np.sin(), log(), np.exp(), log2()\\n',\n",
              "    'import numpy as np\\n',\n",
              "    'a = np.array([1,2,3])\\n',\n",
              "    'sin = np.sin(a)\\n',\n",
              "    'print(sin)\\n',\n",
              "    'log = np.log(a)\\n',\n",
              "    'print(log)\\n',\n",
              "    'exp = np.exp(a)\\n',\n",
              "    'print(exp)\\n',\n",
              "    'log2 = np.log2(a)\\n',\n",
              "    'print(log2)']},\n",
              "  {'cell_type': 'code',\n",
              "   'source': [],\n",
              "   'metadata': {'id': 'O_myeWy1WkPT'},\n",
              "   'outputs': []}]}"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "{\n",
        "  \"nbformat\": 4,\n",
        "  \"nbformat_minor\": 0,\n",
        "  \"metadata\": {\n",
        "    \"colab\": {\n",
        "      \"provenance\": [],\n",
        "      \"authorship_tag\": \"ABX9TyNLcbABWywRP5Xnq0DL5bfi\",\n",
        "    },\n",
        "    \"kernelspec\": {\n",
        "      \"name\": \"python3\",\n",
        "      \"display_name\": \"Python 3\"\n",
        "    },\n",
        "    \"language_info\": {\n",
        "      \"name\": \"python\"\n",
        "    }\n",
        "  },\n",
        "  \"cells\": [\n",
        "    {\n",
        "      \"cell_type\": \"markdown\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"view-in-github\",\n",
        "        \"colab_type\": \"text\"\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"<a href=\\\"https://colab.research.google.com/github/2303A510B3/2303A510B3/blob/main/Assignment-1%20part%20-1\\\" target=\\\"_parent\\\"><img src=\\\"https://colab.research.google.com/assets/colab-badge.svg\\\" alt=\\\"Open In Colab\\\"/></a>\"\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "\n",
        "      \"metadata\": {\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        },\n",
        "        \"id\": \"BpsdRlcGPEdz\",\n",
        "        \"outputId\": \"9866d8b7-88b5-4bfb-c8cf-33209fe817a3\"\n",
        "      },\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"name\": \"stdout\",\n",
        "          \"text\": [\n",
        "            \"1.1\\n\",\n",
        "            \"[[1]\\n\",\n",
        "            \" [2]\\n\",\n",
        "            \" [3]\\n\",\n",
        "            \" [4]\\n\",\n",
        "            \" [5]]\\n\",\n",
        "            \"1.2\\n\",\n",
        "            \"[1 2 3 4 5]\\n\",\n",
        "            \"<class 'numpy.ndarray'>\\n\",\n",
        "            \"[ 4 10 18]\\n\",\n",
        "            \"[0.25 0.4  0.5 ]\\n\",\n",
        "            \"[  1  32 729]\\n\",\n",
        "            \"[5 7 9]\\n\",\n",
        "            \"[0.84147098 0.90929743 0.14112001]\\n\",\n",
        "            \"[0.         0.69314718 1.09861229]\\n\",\n",
        "            \"[ 2.71828183  7.3890561  20.08553692]\\n\",\n",
        "            \"[0.        1.        1.5849625]\\n\"\n",
        "          ]\n",
        "        }\n",
        "      ],\n",
        "      \"source\": [\n",
        "        \"#implementing lists using Numpy\\n\",\n",
        "        \"import numpy as np\\n\",\n",
        "        \"print(1.1)\\n\",\n",
        "        \"list=np.array([[1],[2],[3],[4],[5]])\\n\",\n",
        "        \"print(list)\\n\",\n",
        "        \"\\n\",\n",
        "        \"#implementing arrays using Numpy\\n\",\n",
        "        \"import numpy as np\\n\",\n",
        "        \"print(1.2)\\n\",\n",
        "        \"array=np.array([1,2,3,4,5])\\n\",\n",
        "        \"print(array)\\n\",\n",
        "        \"\\n\",\n",
        "        \"#Indentifing type using \\\"type\\\"()method\\n\",\n",
        "        \"import numpy as np\\n\",\n",
        "        \"arr =np.array([1,2,3,4,5,6,7])\\n\",\n",
        "        \"print(type(arr))\\n\",\n",
        "        \"\\n\",\n",
        "        \"#performing mathematical operations\\n\",\n",
        "        \"#1.multipilcation\\n\",\n",
        "        \"import numpy as np\\n\",\n",
        "        \"a=np.array([1,2,3])\\n\",\n",
        "        \"b=np.array([4,5,6])\\n\",\n",
        "        \"mul=np.multiply(a,b)\\n\",\n",
        "        \"print(mul)\\n\",\n",
        "        \"#2.division\\n\",\n",
        "        \"div=np.divide(a,b)\\n\",\n",
        "        \"print(div)\\n\",\n",
        "        \"#3,poweroff\\n\",\n",
        "        \"power=np.power(a,b)\\n\",\n",
        "        \"print(power)\\n\",\n",
        "        \"\\n\",\n",
        "        \"#Addition of two array\\n\",\n",
        "        \"import numpy as np\\n\",\n",
        "        \"array1=np.array([1,2,3])\\n\",\n",
        "        \"array2=np.array([4,5,6])\\n\",\n",
        "        \"r=array1+array2\\n\",\n",
        "        \"print(r)\\n\",\n",
        "        \"\\n\",\n",
        "        \"#implement np.sin(), log(), np.exp(), log2()\\n\",\n",
        "        \"import numpy as np\\n\",\n",
        "        \"a = np.array([1,2,3])\\n\",\n",
        "        \"sin = np.sin(a)\\n\",\n",
        "        \"print(sin)\\n\",\n",
        "        \"log = np.log(a)\\n\",\n",
        "        \"print(log)\\n\",\n",
        "        \"exp = np.exp(a)\\n\",\n",
        "        \"print(exp)\\n\",\n",
        "        \"log2 = np.log2(a)\\n\",\n",
        "        \"print(log2)\"\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"source\": [],\n",
        "      \"metadata\": {\n",
        "        \"id\": \"O_myeWy1WkPT\"\n",
        "      },\n",
        "\n",
        "      \"outputs\": []\n",
        "    }\n",
        "  ]\n",
        "}"
      ]
    }
  ]
}